import{_ as a,c as i,o as s,a6 as l}from"./chunks/framework.BDbFRS2d.js";const u=JSON.parse('{"title":"01_Java-Basic","description":"","frontmatter":{},"headers":[],"relativePath":"01_Programmer/01_Language/01_Java/01_Java-Basic.md","filePath":"01_Programmer/01_Language/01_Java/01_Java-Basic.md","lastUpdated":1714221871000}'),e={name:"01_Programmer/01_Language/01_Java/01_Java-Basic.md"},t=l(`<h1 id="_01-java-basic" tabindex="-1">01_Java-Basic <a class="header-anchor" href="#_01-java-basic" aria-label="Permalink to &quot;01_Java-Basic&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#_01-java-basic">01_Java-Basic</a><ul><li><a href="#_1-变量">1. 变量</a></li></ul></li><li><a href="#aaaa">aaaa</a><ul><li><a href="#_2-基本类型">2. 基本类型</a><ul><li><a href="#_1-1-基本类型">1.1 基本类型</a></li><li><a href="#_1-2-引用类型">1.2 引用类型</a></li><li><a href="#_1-3-变量声明">1.3 变量声明</a></li><li><a href="#_1-4-变量作用域">1.4 变量作用域</a></li></ul></li></ul></li></ul></nav><h2 id="_1-变量" tabindex="-1">1. 变量 <a class="header-anchor" href="#_1-变量" aria-label="Permalink to &quot;1. 变量&quot;">​</a></h2><p><img src="https://raw.githubusercontent.com/cheng000/picture/main/vitepress-blog/20240427191931.png" alt=""></p><h1 id="aaaa" tabindex="-1">aaaa <a class="header-anchor" href="#aaaa" aria-label="Permalink to &quot;aaaa&quot;">​</a></h1><h2 id="_2-基本类型" tabindex="-1">2. 基本类型 <a class="header-anchor" href="#_2-基本类型" aria-label="Permalink to &quot;2. 基本类型&quot;">​</a></h2><h3 id="_1-1-基本类型" tabindex="-1">1.1 基本类型 <a class="header-anchor" href="#_1-1-基本类型" aria-label="Permalink to &quot;1.1 基本类型&quot;">​</a></h3><p>Java语言支持以下基本类型：</p><ul><li>整数类型：byte、short、int、long</li><li>浮点类型：float、double</li><li>字符类型：char</li><li>布尔类型：boolean</li></ul><h3 id="_1-2-引用类型" tabindex="-1">1.2 引用类型 <a class="header-anchor" href="#_1-2-引用类型" aria-label="Permalink to &quot;1.2 引用类型&quot;">​</a></h3><p>Java语言支持以下引用类型：</p><ul><li>类：类、接口、注解</li><li>数组：int[]、double[]、String[]</li><li>枚举：enum</li><li>注解：@interface</li></ul><h3 id="_1-3-变量声明" tabindex="-1">1.3 变量声明 <a class="header-anchor" href="#_1-3-变量声明" aria-label="Permalink to &quot;1.3 变量声明&quot;">​</a></h3><p>变量声明语法：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">数据类型 变量名 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 初始值;</span></span></code></pre></div><p>例如：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5000.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> grade </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;A&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isMarried </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="_1-4-变量作用域" tabindex="-1">1.4 变量作用域 <a class="header-anchor" href="#_1-4-变量作用域" aria-label="Permalink to &quot;1.4 变量作用域&quot;">​</a></h3><p>Java语言中，变量的作用域分为以下几种：</p><ul><li>局部变量：在方法、构造方法、代码块中声明的变量，只在当前作用域内有效。</li></ul>`,20),h=[t];function n(r,p,o,k,d,c){return s(),i("div",null,h)}const g=a(e,[["render",n]]);export{u as __pageData,g as default};
